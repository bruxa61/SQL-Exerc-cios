--1. Função Escalar:Calcular a Idade do Cliente
--Essa função escalar recebe a data de nascimento de um cliente e retorna a idade em anos.

CREATE FUNCTION CalcularIdade (@dataNascimento DATE)
RETURNS INT
AS
BEGIN
    RETURN DATEDIFF(YEAR, @dataNascimento, GETDATE());
END;

SELECT NomeCliente, dbo.CalcularIdade(Nascimento) AS Idade
FROM Cliente;

--Explicação:
--Essa função calcula a idade de cada cliente com base na data de nascimento e na data atual.
--Retorna um valor inteiro representando a idade, útil para consultas que segmentam clientes por idade.



--2. Função de Tabela Inline: Médicos por Especialidade
--Esta função de tabela inline retorna uma lista de médicos que atendem em uma especialidade específica.

CREATE FUNCTION MedicosPorEspecialidade (@EspecialidadeID INT)
RETURNS TABLE
AS
RETURN (
    SELECT m.MedicoID, m.NomeMedico, m.CRM
    FROM Medico m
    JOIN MedicoEspecialidade me ON m.MedicoID = me.MedicoID
    WHERE me.EspecialidadeID = @EspecialidadeID
);

SELECT *
FROM dbo.MedicosPorEspecialidade(1); -- Exemplo para especialidade com ID 1

--Explicação:
--Essa função retorna uma tabela com os médicos que atuam em uma especialidade específica, identificada pelo EspecialidadeID fornecido.
--É útil para listar médicos que atendem em uma área de especialidade específica, como "Dermatologia Infantil" ou "Acne".



--3. Função de Tabela Multideclaração: Consultas por Cliente
--Esta função de tabela multideclaração retorna uma tabela de consultas associadas a um cliente específico.

CREATE FUNCTION ConsultasPorCliente (@ClienteID INT)
RETURNS @TabelaConsultas TABLE (
    ConsultaID INT,
    DataConsulta DATETIME,
    Especialidade VARCHAR(255),
    NomeMedico VARCHAR(50)
)
AS
BEGIN
    INSERT INTO @TabelaConsultas
    SELECT c.ConsultaID, c.DataConsulta, e.NomeEspecialidade, m.NomeMedico
    FROM Consulta c
    JOIN  Especialidade e ON c.EspecialidadeID = e.EspecialidadeID
    JOIN Medico m ON c.MedicoID = m.MedicoID
    WHERE c.ClienteID = @ClienteID;

    RETURN;
END;

SELECT *
FROM dbo.ConsultasPorCliente3(1); -- Exemplo para cliente com ID 1

--Explicação:
--Essa função retorna uma tabela contendo todas as consultas de um cliente específico, incluindo o nome do médico e a especialidade da consulta.
--É útil para mostrar o histórico de atendimento de um cliente, detalhando consultas passadas e futuras.